/*
* LogWithBLOBs.java
* @author ICL
* @date 2018-10-31 23:29:21
*/
package com.hwitec.core.domain;

import java.io.Serializable;

import org.springframework.format.annotation.DateTimeFormat;
import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
/**
 * 操作日志表
 * 实体类对应的数据表为:sys_log
 * @author ICL
 * @date 2018-10-31 23:29:21
 */
@ApiModel(value ="Log")
public class LogWithBLOBs extends Log implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.request_params
     * @Fields requestParams 操作提交的数据
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "操作提交的数据")
    private String requestParams;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.diff_modify_data
     * @Fields diffModifyData 新旧数据比较结果
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "新旧数据比较结果")
    private String diffModifyData;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.exception_info
     * @Fields exceptionInfo 异常信息
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "异常信息")
    private String exceptionInfo;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_log
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 操作提交的数据 字段:sys_log.request_params
     *
     * @return sys_log.request_params, 操作提交的数据
     */
    public String getRequestParams() {
        return requestParams;
    }

    /**
     * 设置 操作提交的数据 字段:sys_log.request_params
     *
     * @param requestParams the value for sys_log.request_params, 操作提交的数据
     */
    public void setRequestParams(String requestParams) {
        this.requestParams = requestParams == null ? null : requestParams.trim();
    }

    /**
     * 获取 新旧数据比较结果 字段:sys_log.diff_modify_data
     *
     * @return sys_log.diff_modify_data, 新旧数据比较结果
     */
    public String getDiffModifyData() {
        return diffModifyData;
    }

    /**
     * 设置 新旧数据比较结果 字段:sys_log.diff_modify_data
     *
     * @param diffModifyData the value for sys_log.diff_modify_data, 新旧数据比较结果
     */
    public void setDiffModifyData(String diffModifyData) {
        this.diffModifyData = diffModifyData == null ? null : diffModifyData.trim();
    }

    /**
     * 获取 异常信息 字段:sys_log.exception_info
     *
     * @return sys_log.exception_info, 异常信息
     */
    public String getExceptionInfo() {
        return exceptionInfo;
    }

    /**
     * 设置 异常信息 字段:sys_log.exception_info
     *
     * @param exceptionInfo the value for sys_log.exception_info, 异常信息
     */
    public void setExceptionInfo(String exceptionInfo) {
        this.exceptionInfo = exceptionInfo == null ? null : exceptionInfo.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_log 操作日志表
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", requestParams=").append(requestParams);
        sb.append(", diffModifyData=").append(diffModifyData);
        sb.append(", exceptionInfo=").append(exceptionInfo);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_log 操作日志表
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        LogWithBLOBs other = (LogWithBLOBs) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getLogType() == null ? other.getLogType() == null : this.getLogType().equals(other.getLogType()))
            && (this.getLogTitle() == null ? other.getLogTitle() == null : this.getLogTitle().equals(other.getLogTitle()))
            && (this.getCreateBy() == null ? other.getCreateBy() == null : this.getCreateBy().equals(other.getCreateBy()))
            && (this.getCreateByName() == null ? other.getCreateByName() == null : this.getCreateByName().equals(other.getCreateByName()))
            && (this.getCreateDate() == null ? other.getCreateDate() == null : this.getCreateDate().equals(other.getCreateDate()))
            && (this.getRequestUri() == null ? other.getRequestUri() == null : this.getRequestUri().equals(other.getRequestUri()))
            && (this.getRequestMethod() == null ? other.getRequestMethod() == null : this.getRequestMethod().equals(other.getRequestMethod()))
            && (this.getBizKey() == null ? other.getBizKey() == null : this.getBizKey().equals(other.getBizKey()))
            && (this.getBizType() == null ? other.getBizType() == null : this.getBizType().equals(other.getBizType()))
            && (this.getRemoteAddr() == null ? other.getRemoteAddr() == null : this.getRemoteAddr().equals(other.getRemoteAddr()))
            && (this.getServerAddr() == null ? other.getServerAddr() == null : this.getServerAddr().equals(other.getServerAddr()))
            && (this.getIsException() == null ? other.getIsException() == null : this.getIsException().equals(other.getIsException()))
            && (this.getUserAgent() == null ? other.getUserAgent() == null : this.getUserAgent().equals(other.getUserAgent()))
            && (this.getDeviceName() == null ? other.getDeviceName() == null : this.getDeviceName().equals(other.getDeviceName()))
            && (this.getBrowserName() == null ? other.getBrowserName() == null : this.getBrowserName().equals(other.getBrowserName()))
            && (this.getExecuteTime() == null ? other.getExecuteTime() == null : this.getExecuteTime().equals(other.getExecuteTime()))
            && (this.getCorpCode() == null ? other.getCorpCode() == null : this.getCorpCode().equals(other.getCorpCode()))
            && (this.getCorpName() == null ? other.getCorpName() == null : this.getCorpName().equals(other.getCorpName()))
            && (this.getRequestParams() == null ? other.getRequestParams() == null : this.getRequestParams().equals(other.getRequestParams()))
            && (this.getDiffModifyData() == null ? other.getDiffModifyData() == null : this.getDiffModifyData().equals(other.getDiffModifyData()))
            && (this.getExceptionInfo() == null ? other.getExceptionInfo() == null : this.getExceptionInfo().equals(other.getExceptionInfo()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_log 操作日志表
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getLogType() == null) ? 0 : getLogType().hashCode());
        result = prime * result + ((getLogTitle() == null) ? 0 : getLogTitle().hashCode());
        result = prime * result + ((getCreateBy() == null) ? 0 : getCreateBy().hashCode());
        result = prime * result + ((getCreateByName() == null) ? 0 : getCreateByName().hashCode());
        result = prime * result + ((getCreateDate() == null) ? 0 : getCreateDate().hashCode());
        result = prime * result + ((getRequestUri() == null) ? 0 : getRequestUri().hashCode());
        result = prime * result + ((getRequestMethod() == null) ? 0 : getRequestMethod().hashCode());
        result = prime * result + ((getBizKey() == null) ? 0 : getBizKey().hashCode());
        result = prime * result + ((getBizType() == null) ? 0 : getBizType().hashCode());
        result = prime * result + ((getRemoteAddr() == null) ? 0 : getRemoteAddr().hashCode());
        result = prime * result + ((getServerAddr() == null) ? 0 : getServerAddr().hashCode());
        result = prime * result + ((getIsException() == null) ? 0 : getIsException().hashCode());
        result = prime * result + ((getUserAgent() == null) ? 0 : getUserAgent().hashCode());
        result = prime * result + ((getDeviceName() == null) ? 0 : getDeviceName().hashCode());
        result = prime * result + ((getBrowserName() == null) ? 0 : getBrowserName().hashCode());
        result = prime * result + ((getExecuteTime() == null) ? 0 : getExecuteTime().hashCode());
        result = prime * result + ((getCorpCode() == null) ? 0 : getCorpCode().hashCode());
        result = prime * result + ((getCorpName() == null) ? 0 : getCorpName().hashCode());
        result = prime * result + ((getRequestParams() == null) ? 0 : getRequestParams().hashCode());
        result = prime * result + ((getDiffModifyData() == null) ? 0 : getDiffModifyData().hashCode());
        result = prime * result + ((getExceptionInfo() == null) ? 0 : getExceptionInfo().hashCode());
        return result;
    }
}