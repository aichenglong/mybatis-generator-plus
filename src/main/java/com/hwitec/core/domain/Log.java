/*
* Log.java
* @author ICL
* @date 2018-10-31 23:29:21
*/
package com.hwitec.core.domain;

import java.io.Serializable;
import java.math.BigDecimal;
import org.common.domain.DataEntity;

/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table sys_log
 *
 * @mbg.generated 2018-10-31 23:29:21
 */
import org.springframework.format.annotation.DateTimeFormat;
import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
/**
 * 操作日志表
 * 实体类对应的数据表为:sys_log
 * @author ICL
 * @date 2018-10-31 23:29:21
 */
@ApiModel(value ="Log")
public class Log extends DataEntity implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.id
     * @Fields id 编号
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "编号")
    private String id;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.log_type
     * @Fields logType 日志类型
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "日志类型")
    private String logType;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.log_title
     * @Fields logTitle 日志标题
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "日志标题")
    private String logTitle;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.create_by
     * @Fields createBy 创建者
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "创建者")
    private String createBy;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.create_by_name
     * @Fields createByName 用户名称
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "用户名称")
    private String createByName;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.request_uri
     * @Fields requestUri 请求URI
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "请求URI")
    private String requestUri;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.request_method
     * @Fields requestMethod 操作方式
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "操作方式")
    private String requestMethod;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.biz_key
     * @Fields bizKey 业务主键
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "业务主键")
    private String bizKey;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.biz_type
     * @Fields bizType 业务类型
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "业务类型")
    private String bizType;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.remote_addr
     * @Fields remoteAddr 操作IP地址
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "操作IP地址")
    private String remoteAddr;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.server_addr
     * @Fields serverAddr 请求服务器地址
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "请求服务器地址")
    private String serverAddr;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.is_exception
     * @Fields isException 是否异常
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "是否异常")
    private String isException;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.user_agent
     * @Fields userAgent 用户代理
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "用户代理")
    private String userAgent;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.device_name
     * @Fields deviceName 设备名称/操作系统
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "设备名称/操作系统")
    private String deviceName;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.browser_name
     * @Fields browserName 浏览器名称
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "浏览器名称")
    private String browserName;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.execute_time
     * @Fields executeTime 执行时间
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "执行时间")
    private BigDecimal executeTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.corp_code
     * @Fields corpCode 租户代码
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "租户代码")
    private String corpCode;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column sys_log.corp_name
     * @Fields corpName 租户名称
     *
     * @mbg.generated 2018-10-31 23:29:21
     **/
    @ApiModelProperty(value = "租户名称")
    private String corpName;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_log
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 编号 字段:sys_log.id
     *
     * @return sys_log.id, 编号
     */
    public String getId() {
        return id;
    }

    /**
     * 设置 编号 字段:sys_log.id
     *
     * @param id the value for sys_log.id, 编号
     */
    public void setId(String id) {
        this.id = id == null ? null : id.trim();
    }

    /**
     * 获取 日志类型 字段:sys_log.log_type
     *
     * @return sys_log.log_type, 日志类型
     */
    public String getLogType() {
        return logType;
    }

    /**
     * 设置 日志类型 字段:sys_log.log_type
     *
     * @param logType the value for sys_log.log_type, 日志类型
     */
    public void setLogType(String logType) {
        this.logType = logType == null ? null : logType.trim();
    }

    /**
     * 获取 日志标题 字段:sys_log.log_title
     *
     * @return sys_log.log_title, 日志标题
     */
    public String getLogTitle() {
        return logTitle;
    }

    /**
     * 设置 日志标题 字段:sys_log.log_title
     *
     * @param logTitle the value for sys_log.log_title, 日志标题
     */
    public void setLogTitle(String logTitle) {
        this.logTitle = logTitle == null ? null : logTitle.trim();
    }

    /**
     * 获取 创建者 字段:sys_log.create_by
     *
     * @return sys_log.create_by, 创建者
     */
    public String getCreateBy() {
        return createBy;
    }

    /**
     * 设置 创建者 字段:sys_log.create_by
     *
     * @param createBy the value for sys_log.create_by, 创建者
     */
    public void setCreateBy(String createBy) {
        this.createBy = createBy == null ? null : createBy.trim();
    }

    /**
     * 获取 用户名称 字段:sys_log.create_by_name
     *
     * @return sys_log.create_by_name, 用户名称
     */
    public String getCreateByName() {
        return createByName;
    }

    /**
     * 设置 用户名称 字段:sys_log.create_by_name
     *
     * @param createByName the value for sys_log.create_by_name, 用户名称
     */
    public void setCreateByName(String createByName) {
        this.createByName = createByName == null ? null : createByName.trim();
    }

    /**
     * 获取 请求URI 字段:sys_log.request_uri
     *
     * @return sys_log.request_uri, 请求URI
     */
    public String getRequestUri() {
        return requestUri;
    }

    /**
     * 设置 请求URI 字段:sys_log.request_uri
     *
     * @param requestUri the value for sys_log.request_uri, 请求URI
     */
    public void setRequestUri(String requestUri) {
        this.requestUri = requestUri == null ? null : requestUri.trim();
    }

    /**
     * 获取 操作方式 字段:sys_log.request_method
     *
     * @return sys_log.request_method, 操作方式
     */
    public String getRequestMethod() {
        return requestMethod;
    }

    /**
     * 设置 操作方式 字段:sys_log.request_method
     *
     * @param requestMethod the value for sys_log.request_method, 操作方式
     */
    public void setRequestMethod(String requestMethod) {
        this.requestMethod = requestMethod == null ? null : requestMethod.trim();
    }

    /**
     * 获取 业务主键 字段:sys_log.biz_key
     *
     * @return sys_log.biz_key, 业务主键
     */
    public String getBizKey() {
        return bizKey;
    }

    /**
     * 设置 业务主键 字段:sys_log.biz_key
     *
     * @param bizKey the value for sys_log.biz_key, 业务主键
     */
    public void setBizKey(String bizKey) {
        this.bizKey = bizKey == null ? null : bizKey.trim();
    }

    /**
     * 获取 业务类型 字段:sys_log.biz_type
     *
     * @return sys_log.biz_type, 业务类型
     */
    public String getBizType() {
        return bizType;
    }

    /**
     * 设置 业务类型 字段:sys_log.biz_type
     *
     * @param bizType the value for sys_log.biz_type, 业务类型
     */
    public void setBizType(String bizType) {
        this.bizType = bizType == null ? null : bizType.trim();
    }

    /**
     * 获取 操作IP地址 字段:sys_log.remote_addr
     *
     * @return sys_log.remote_addr, 操作IP地址
     */
    public String getRemoteAddr() {
        return remoteAddr;
    }

    /**
     * 设置 操作IP地址 字段:sys_log.remote_addr
     *
     * @param remoteAddr the value for sys_log.remote_addr, 操作IP地址
     */
    public void setRemoteAddr(String remoteAddr) {
        this.remoteAddr = remoteAddr == null ? null : remoteAddr.trim();
    }

    /**
     * 获取 请求服务器地址 字段:sys_log.server_addr
     *
     * @return sys_log.server_addr, 请求服务器地址
     */
    public String getServerAddr() {
        return serverAddr;
    }

    /**
     * 设置 请求服务器地址 字段:sys_log.server_addr
     *
     * @param serverAddr the value for sys_log.server_addr, 请求服务器地址
     */
    public void setServerAddr(String serverAddr) {
        this.serverAddr = serverAddr == null ? null : serverAddr.trim();
    }

    /**
     * 获取 是否异常 字段:sys_log.is_exception
     *
     * @return sys_log.is_exception, 是否异常
     */
    public String getIsException() {
        return isException;
    }

    /**
     * 设置 是否异常 字段:sys_log.is_exception
     *
     * @param isException the value for sys_log.is_exception, 是否异常
     */
    public void setIsException(String isException) {
        this.isException = isException == null ? null : isException.trim();
    }

    /**
     * 获取 用户代理 字段:sys_log.user_agent
     *
     * @return sys_log.user_agent, 用户代理
     */
    public String getUserAgent() {
        return userAgent;
    }

    /**
     * 设置 用户代理 字段:sys_log.user_agent
     *
     * @param userAgent the value for sys_log.user_agent, 用户代理
     */
    public void setUserAgent(String userAgent) {
        this.userAgent = userAgent == null ? null : userAgent.trim();
    }

    /**
     * 获取 设备名称/操作系统 字段:sys_log.device_name
     *
     * @return sys_log.device_name, 设备名称/操作系统
     */
    public String getDeviceName() {
        return deviceName;
    }

    /**
     * 设置 设备名称/操作系统 字段:sys_log.device_name
     *
     * @param deviceName the value for sys_log.device_name, 设备名称/操作系统
     */
    public void setDeviceName(String deviceName) {
        this.deviceName = deviceName == null ? null : deviceName.trim();
    }

    /**
     * 获取 浏览器名称 字段:sys_log.browser_name
     *
     * @return sys_log.browser_name, 浏览器名称
     */
    public String getBrowserName() {
        return browserName;
    }

    /**
     * 设置 浏览器名称 字段:sys_log.browser_name
     *
     * @param browserName the value for sys_log.browser_name, 浏览器名称
     */
    public void setBrowserName(String browserName) {
        this.browserName = browserName == null ? null : browserName.trim();
    }

    /**
     * 获取 执行时间 字段:sys_log.execute_time
     *
     * @return sys_log.execute_time, 执行时间
     */
    public BigDecimal getExecuteTime() {
        return executeTime;
    }

    /**
     * 设置 执行时间 字段:sys_log.execute_time
     *
     * @param executeTime the value for sys_log.execute_time, 执行时间
     */
    public void setExecuteTime(BigDecimal executeTime) {
        this.executeTime = executeTime;
    }

    /**
     * 获取 租户代码 字段:sys_log.corp_code
     *
     * @return sys_log.corp_code, 租户代码
     */
    public String getCorpCode() {
        return corpCode;
    }

    /**
     * 设置 租户代码 字段:sys_log.corp_code
     *
     * @param corpCode the value for sys_log.corp_code, 租户代码
     */
    public void setCorpCode(String corpCode) {
        this.corpCode = corpCode == null ? null : corpCode.trim();
    }

    /**
     * 获取 租户名称 字段:sys_log.corp_name
     *
     * @return sys_log.corp_name, 租户名称
     */
    public String getCorpName() {
        return corpName;
    }

    /**
     * 设置 租户名称 字段:sys_log.corp_name
     *
     * @param corpName the value for sys_log.corp_name, 租户名称
     */
    public void setCorpName(String corpName) {
        this.corpName = corpName == null ? null : corpName.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_log 操作日志表
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", logType=").append(logType);
        sb.append(", logTitle=").append(logTitle);
        sb.append(", createBy=").append(createBy);
        sb.append(", createByName=").append(createByName);
        sb.append(", requestUri=").append(requestUri);
        sb.append(", requestMethod=").append(requestMethod);
        sb.append(", bizKey=").append(bizKey);
        sb.append(", bizType=").append(bizType);
        sb.append(", remoteAddr=").append(remoteAddr);
        sb.append(", serverAddr=").append(serverAddr);
        sb.append(", isException=").append(isException);
        sb.append(", userAgent=").append(userAgent);
        sb.append(", deviceName=").append(deviceName);
        sb.append(", browserName=").append(browserName);
        sb.append(", executeTime=").append(executeTime);
        sb.append(", corpCode=").append(corpCode);
        sb.append(", corpName=").append(corpName);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_log 操作日志表
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Log other = (Log) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getLogType() == null ? other.getLogType() == null : this.getLogType().equals(other.getLogType()))
            && (this.getLogTitle() == null ? other.getLogTitle() == null : this.getLogTitle().equals(other.getLogTitle()))
            && (this.getCreateBy() == null ? other.getCreateBy() == null : this.getCreateBy().equals(other.getCreateBy()))
            && (this.getCreateByName() == null ? other.getCreateByName() == null : this.getCreateByName().equals(other.getCreateByName()))
            && (this.getCreateDate() == null ? other.getCreateDate() == null : this.getCreateDate().equals(other.getCreateDate()))
            && (this.getRequestUri() == null ? other.getRequestUri() == null : this.getRequestUri().equals(other.getRequestUri()))
            && (this.getRequestMethod() == null ? other.getRequestMethod() == null : this.getRequestMethod().equals(other.getRequestMethod()))
            && (this.getBizKey() == null ? other.getBizKey() == null : this.getBizKey().equals(other.getBizKey()))
            && (this.getBizType() == null ? other.getBizType() == null : this.getBizType().equals(other.getBizType()))
            && (this.getRemoteAddr() == null ? other.getRemoteAddr() == null : this.getRemoteAddr().equals(other.getRemoteAddr()))
            && (this.getServerAddr() == null ? other.getServerAddr() == null : this.getServerAddr().equals(other.getServerAddr()))
            && (this.getIsException() == null ? other.getIsException() == null : this.getIsException().equals(other.getIsException()))
            && (this.getUserAgent() == null ? other.getUserAgent() == null : this.getUserAgent().equals(other.getUserAgent()))
            && (this.getDeviceName() == null ? other.getDeviceName() == null : this.getDeviceName().equals(other.getDeviceName()))
            && (this.getBrowserName() == null ? other.getBrowserName() == null : this.getBrowserName().equals(other.getBrowserName()))
            && (this.getExecuteTime() == null ? other.getExecuteTime() == null : this.getExecuteTime().equals(other.getExecuteTime()))
            && (this.getCorpCode() == null ? other.getCorpCode() == null : this.getCorpCode().equals(other.getCorpCode()))
            && (this.getCorpName() == null ? other.getCorpName() == null : this.getCorpName().equals(other.getCorpName()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_log 操作日志表
     *
     * @mbg.generated 2018-10-31 23:29:21
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getLogType() == null) ? 0 : getLogType().hashCode());
        result = prime * result + ((getLogTitle() == null) ? 0 : getLogTitle().hashCode());
        result = prime * result + ((getCreateBy() == null) ? 0 : getCreateBy().hashCode());
        result = prime * result + ((getCreateByName() == null) ? 0 : getCreateByName().hashCode());
        result = prime * result + ((getCreateDate() == null) ? 0 : getCreateDate().hashCode());
        result = prime * result + ((getRequestUri() == null) ? 0 : getRequestUri().hashCode());
        result = prime * result + ((getRequestMethod() == null) ? 0 : getRequestMethod().hashCode());
        result = prime * result + ((getBizKey() == null) ? 0 : getBizKey().hashCode());
        result = prime * result + ((getBizType() == null) ? 0 : getBizType().hashCode());
        result = prime * result + ((getRemoteAddr() == null) ? 0 : getRemoteAddr().hashCode());
        result = prime * result + ((getServerAddr() == null) ? 0 : getServerAddr().hashCode());
        result = prime * result + ((getIsException() == null) ? 0 : getIsException().hashCode());
        result = prime * result + ((getUserAgent() == null) ? 0 : getUserAgent().hashCode());
        result = prime * result + ((getDeviceName() == null) ? 0 : getDeviceName().hashCode());
        result = prime * result + ((getBrowserName() == null) ? 0 : getBrowserName().hashCode());
        result = prime * result + ((getExecuteTime() == null) ? 0 : getExecuteTime().hashCode());
        result = prime * result + ((getCorpCode() == null) ? 0 : getCorpCode().hashCode());
        result = prime * result + ((getCorpName() == null) ? 0 : getCorpName().hashCode());
        return result;
    }
}